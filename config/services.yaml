# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    default_addr: !php/const BenTools\MercurePHP\Configuration\Configuration::DEFAULT_ADDR
    default_transport_url: !php/const BenTools\MercurePHP\Configuration\Configuration::DEFAULT_TRANSPORT_URL
    default_jwt_algorithm: !php/const BenTools\MercurePHP\Configuration\Configuration::DEFAULT_JWT_ALGORITHM
    default_cors_allowed_origins: !php/const BenTools\MercurePHP\Configuration\Configuration::DEFAULT_CORS_ALLOWED_ORIGINS
    default_publish_allowed_origins: !php/const BenTools\MercurePHP\Configuration\Configuration::DEFAULT_PUBLISH_ALLOWED_ORIGINS
    addr: '%env(default:default_addr:string:ADDR)%'
    transport_url: '%env(default:default_transport_url:string:TRANSPORT_URL)%'
    storage_url: '%env(default::string:STORAGE_URL)%'
    metrics_url: '%env(default::string:METRICS_URL)%'
    cors_allowed_origins: '%env(default:default_cors_allowed_origins:string:CORS_ALLOWED_ORIGINS)%'
    publish_allowed_origins: '%env(default:default_publish_allowed_origins:string:PUBLISH_ALLOWED_ORIGINS)%'
    jwt_key: '%env(default::string:JWT_KEY)%'
    jwt_algorithm: '%env(default:default_jwt_algorithm:string:JWT_ALGORITHM)%'
    publisher_jwt_key: '%env(default::string:PUBLISHER_JWT_KEY)%'
    publisher_jwt_algorithm: '%env(default::string:PUBLISHER_JWT_ALGORITHM)%'
    subscriber_jwt_key: '%env(default::string:SUBSCRIBER_JWT_KEY)%'
    subscriber_jwt_algorithm: '%env(default::string:SUBSCRIBER_JWT_ALGORITHM)%'
    allow_anonymous: '%env(bool:ALLOW_ANONYMOUS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        BenTools\MercurePHP\Transport\TransportFactoryInterface:
            tags: ['mercure.transport']
        BenTools\MercurePHP\Storage\StorageFactoryInterface:
            tags: ['mercure.storage']
        BenTools\MercurePHP\Metrics\MetricsHandlerFactoryInterface:
            tags: ['mercure.metrics_handler']
        BenTools\MercurePHP\Controller\AbstractController:
            tags: ['mercure.controller']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    BenTools\MercurePHP\:
        resource: '../src/'
        exclude:
            - '../src/Kernel.php'
            - '../src/functions.php'
            - '../src/Security/Authenticator.php'
            - '../src/Model/'

    BenTools\MercurePHP\Configuration\Configuration:
        arguments:
            $config:
                addr: '%addr%'
                transport_url: '%transport_url%'
                storage_url: '%storage_url%'
                metrics_url: '%metrics_url%'
                cors_allowed_origins: '%cors_allowed_origins%'
                publish_allowed_origins: '%publish_allowed_origins%'
                jwt_key: '%jwt_key%'
                jwt_algorithm: '%jwt_algorithm%'
                publisher_jwt_key: '%publisher_jwt_key%'
                publisher_jwt_algorithm: '%publisher_jwt_algorithm%'
                subscriber_jwt_key: '%subscriber_jwt_key%'
                subscriber_jwt_algorithm: '%subscriber_jwt_algorithm%'
                allow_anonymous: '%allow_anonymous%'

    BenTools\MercurePHP\Transport\TransportFactoryInterface: '@BenTools\MercurePHP\Transport\TransportFactory'
    BenTools\MercurePHP\Storage\StorageFactoryInterface: '@BenTools\MercurePHP\Storage\StorageFactory'
    BenTools\MercurePHP\Metrics\MetricsHandlerFactoryInterface: '@BenTools\MercurePHP\Metrics\MetricsHandlerFactory'

    BenTools\MercurePHP\Transport\TransportFactory:
        arguments:
            $factories: !tagged_iterator mercure.transport

    BenTools\MercurePHP\Storage\StorageFactory:
        arguments:
            $factories: !tagged_iterator mercure.storage

    BenTools\MercurePHP\Metrics\MetricsHandlerFactory:
        arguments:
            $factories: !tagged_iterator mercure.metrics_handler

    bentools.mercure.subscriber_authenticator:
        class: BenTools\MercurePHP\Security\Authenticator
        factory: ['BenTools\MercurePHP\Security\Authenticator', 'createSubscriberAuthenticator']

    bentools.mercure.publisher_authenticator:
        class: BenTools\MercurePHP\Security\Authenticator
        factory: ['BenTools\MercurePHP\Security\Authenticator', 'createPublisherAuthenticator']

    BenTools\MercurePHP\Hub\HubFactoryInterface: '@BenTools\MercurePHP\Hub\HubFactory'
    BenTools\MercurePHP\Hub\HubFactory:
        arguments:
            $controllers: !tagged_iterator mercure.controller

    React\EventLoop\Factory: ~

    React\EventLoop\LoopInterface:
        factory: ['@React\EventLoop\Factory', 'create']
